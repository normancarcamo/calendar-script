'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Observer=function(){function Observer(name,summary){_classCallCheck(this,Observer);this.actions={};}_createClass(Observer,[{key:'on',value:function on(name,action){if(!name){throw new Error('Parameter "name" must be passed as a string');}if(!action){throw new Error('Parameter "action" must be passed as a function');}if(!this.actions[name]){this.actions[name]={notify:action};}else{this.actions[name].notify=action;}return this;}},{key:'off',value:function off(name,callback){if(!name){throw new Error('Parameter "name" must be passed as a string');}if(this.actions[name]){delete this.actions[name];}if(callback){callback();}return this;}},{key:'offAll',value:function offAll(callback){var _this=this;Object.keys(this.actions).forEach(function(name){if(_this.actions[name]){delete _this.actions[name];}});if(callback){callback();}return this;}},{key:'emit',value:function emit(name,data){if(!name){throw new Error('Parameter "name" must be passed as a string');}if(this.actions[name]){this.actions[name].notify.apply(this,Array.prototype.slice.call(arguments).slice(1));}return this;}},{key:'emitAll',value:function emitAll(callback){var _this2=this;Object.keys(this.actions).forEach(function(name){if(_this2.actions[name]){_this2.actions[name].notify.call(_this2);}});if(callback){callback();}return this;}}]);return Observer;}();exports.default=Observer;